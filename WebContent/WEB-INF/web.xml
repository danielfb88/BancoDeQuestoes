<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>BancoDeQuestoes</display-name>

	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.jsf</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Development</param-value>
	</context-param>


	<!-- Este bloco avisa ao tomcat que o DataSource JNDI "jdbc/BancoDeQuestoesDB"
		contido em: WebContent/META-INF/context.xml, deve estar disponível para
		o aplicativo -->
	<resource-ref>
		<description>DataSource BancoDeQuestoesDB</description>
		<res-ref-name>jdbc/BancoDeQuestoesDB</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>


	<!-- Spring Security -->
	<!-- Faz com que o Spring-Security possa interceptar todas as requisições
		realizadas e avalie se quem está requisitando tem permissão de acesso ou
		não. -->
	<context-param>
		<!-- Define quais são os arquivos de configuração disponíveis -->
		<param-name>contextConfigLocation</param-name>
		<param-value>
			<!-- Arquivo que diz ao Spring-Security qual DataSource usar para a conexão  -->
			/WEB-INF/applicationContext.xml
			<!-- Arquivo com informações de permissão para pastas e permissões -->
			/WEB-INF/applicationContext-security.xml
		</param-value>
	</context-param>

	<!-- Faz com que o Spring intercepte todas as requisições realizadas -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<!-- Faz com que todas as requisições sejam avaliadas -->
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Permite que o Spring carregue os arquivos de configuração no momento
		em que o aplicativo web estiver sendo colocado no ar, junto com o servidor -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- /Spring Security -->


</web-app>